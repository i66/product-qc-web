@model IPagedList<product_qc_web.Models.TDelivery>
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Mvc.Common;

@{
    ViewData["Title"] = "成品庫存與QC進度";
}

@functions{
    private string getSortIconCss(DeliveryField field, DeliveryField sortField, bool isAsc)
    {
        string upDownImgName = "sort-down.png";

        if (isAsc)
            upDownImgName = "sort-up.png";

        if (field == sortField)
            return "<img src=\"/img/" + upDownImgName + "\" width=\"10\" height=\"10\">";
        else
            return "";
    }
}

<link href="~/css/PagedList.css" rel="stylesheet" type="text/css" />
<h2 align="center">成品庫存與QC進度</h2>
<br />
<h4 style="color:blue;">成品：@Model.FirstOrDefault().ProductName</h4>
<hr />
<table class="table" style="width:100%">
    <thead>
        <tr>
            <th style="width:7%" class="tablet">
                項次
            </th>
            <th style="width:12%" class="mobile">
                @Html.ActionLink("完成時間", "Index", new { productName = @Model.FirstOrDefault().ProductName, sortField = DeliveryField.QcFinishedTime, lastSortField = Model.FirstOrDefault().SortField, isAsc = Model.FirstOrDefault().IsAsc })
                @Html.Raw(@getSortIconCss(DeliveryField.QcFinishedTime, Model.FirstOrDefault().SortField, Model.FirstOrDefault().IsAsc))
            </th>
            <th style="width:14%">
                @Html.ActionLink("工單號碼", "Index", new { productName = @Model.FirstOrDefault().ProductName, sortField = DeliveryField.WorkOrderNum, lastSortField = Model.FirstOrDefault().SortField, isAsc = Model.FirstOrDefault().IsAsc })
                @Html.Raw(@getSortIconCss(DeliveryField.WorkOrderNum, Model.FirstOrDefault().SortField, Model.FirstOrDefault().IsAsc))
            </th>
            <th style="width:8%" class="tiny">
                @Html.DisplayNameFor(model => model.FirstOrDefault().MachineNum)
            </th>
            <th style="width:17%">
                @Html.ActionLink("出貨案場", "Index", new { productName = @Model.FirstOrDefault().ProductName, sortField = DeliveryField.DeliveryDestination, lastSortField = Model.FirstOrDefault().SortField, isAsc = Model.FirstOrDefault().IsAsc })
                @Html.Raw(@getSortIconCss(DeliveryField.DeliveryDestination, Model.FirstOrDefault().SortField, Model.FirstOrDefault().IsAsc))
            </th>
            <th style="width:35%"  class="small">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().ExchangeReturnMalfunctionNote)
            </th>
            <th style="width:7%" class="tablet"></th>
        </tr>
    </thead>
    <tbody>
        @{
            int id = ViewBag.PageNumber ?? 0;
        }
        @foreach (var item in Model)
        {
            id += 1;
        <tr onclick="location.href = '@Url.Action("Edit", new { item.ProductName, item.SortField, isAsc = item.IsAsc, item.Page, item.WorkOrderNum, item.MachineNum })'">
            <td class="tablet">
                @id
            </td>
            <td class="mobile">
                @Html.DisplayFor(modelItem => item.QcFinishedTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WorkOrderNum)
            </td>
            <td class="tiny">
                @Html.DisplayFor(modelItem => item.MachineNum)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ShortDeliveryDestination)
            </td>
            <td class="small">
                @Html.DisplayFor(modelItem => item.ShortExchangeReturnMalfunctionNote)
            </td>
            <td class="tablet">
                @Html.ActionLink("編輯", "Edit", new { item.ProductName, item.SortField, isAsc = item.IsAsc, item.Page, item.WorkOrderNum, item.MachineNum })
            </td>
        </tr>
        }
    </tbody>
</table>
<nav aria-label="Page navigation">
    <ul class="pagination">
        @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { @Model.FirstOrDefault().ProductName, sortField = Model.FirstOrDefault().SortField, isAsc = Model.FirstOrDefault().IsAsc, page }),
            new PagedListRenderOptions
            {
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" }
            })
    </ul>
</nav>